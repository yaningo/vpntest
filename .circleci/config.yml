version: 2.1
jobs:
  test-vpn:
    machine:
      image: ubuntu-1604:201903-01
      
    steps:
      - run:
          name: Install OpenVPN
          command: |
            sudo apt-get update -y && sudo apt-get install openvpn
        
      - run:
          name: Init le VPN
          command: |
            # See https://azetinetworks.atlassian.net/wiki/spaces/SC13/pages/106496011/OpenVPN+Client+on+Ubuntu+16.04
            echo $VPN_CONFIG | base64 --decode >> config.ovpn
            sudo cp config.ovpn /etc/openvpn/client.conf
            sudo systemctl enable openvpn@client.service
            #printf "\"$VPN_USER\\n$VPN_PASSWORD\\n\"" >> vpn.login
            echo "Public IP is $(wget -qO- http://checkip.amazonaws.com | tee initial.ip)"
            
            # Reload systemd manager configuration. Reloading systemctl will be failed with docker executor because it's privileged=false
            sudo systemctl daemon-reload
                          
  #    - run:
  #        name: Configure openvpn-client.service 
  #        command: |
  #          sudo sh -c 'echo "[Unit]" > /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "Description=OpenVPN Client" >> /etc/systemd/system/openvpn-client.service'
  #         sudo sh -c 'echo "After=syslog.target network.target" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "[Service]" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "PrivateTmp=true" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "Type=simple" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "PIDFile=/var/run/openvpn/inf.pid" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "ExecStart=/usr/sbin/openvpn --cd /etc/openvpn/ --config config.ovpn" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "[Install]" >> /etc/systemd/system/openvpn-client.service'
  #          sudo sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/openvpn-client.service'
            
            # Reload systemd manager configuration. Reloading systemctl will be failed with docker executor because it's privileged=false
            #sudo systemctl daemon-reload
          
     # - run:
     #     name: Configure OpenVPN config file /etc/openvpn/config.ovpn with parameter config
     #     command: echo ${VPN_CONFIG} | base64 --decode | sudo tee /etc/openvpn/config.ovpn 1>/dev/null
        
     # - run:
     #     name: Configure OpenVPN credential file /etc/openvpn/vpn.login with parameter username and password
     #     command: |
     #       echo ${VPN_USER} | sudo tee /etc/openvpn/vpn.login 1>/dev/null
     #       echo ${VPN_PASSWORD} | sudo tee -a /etc/openvpn/vpn.login 1>/dev/null
        
     # - run:
     #     command: "for n in {1..3}\ndo\n  echo \"Connection attempt $n\"\n  sudo systemctl restart openvpn-client\n  timeout 30 \\\n    bash -c 'until systemctl status openvpn-client | grep \"Initialization Sequence Completed\" > /dev/null; do sleep 1 | echo \"connecting vpn...\" ; done' || \\\n    timeout_rtrn_code=$?\n  if [[ -z $timeout_rtrn_code || $timeout_rtrn_code == 0 ]]\n  then\n    echo \"Connected to VPN successfully\" && break\n  else\n    echo \"Connection attempt $n has timed out\"\n    if [[ $n == 3 ]]; \n    then \n      echo \"VPN connection has failed. Error: $timeout_rtrn_code\" && exit $timeout_rtrn_code\n    else\n      echo \"VPN connection has failed but will retry in 5 seconds. Error: $timeout_rtrn_code\"\n      sudo systemctl stop openvpn-client\n      unset timeout_rtrn_code\n    fi\n  fi\n  sleep 45\ndone"
     #     name: Start OPENVPN client and wait for connection to be made
     
      - run:
          command: "for n in {1..3}\ndo\n  echo \"Connection attempt $n\"\n  sudo service openvpn@client start\n  timeout 30 \\\n    bash -c 'until systemctl status openvpn-client | grep \"Initialization Sequence Completed\" > /dev/null; do sleep 1 | echo \"connecting vpn...\" ; done' || \\\n    timeout_rtrn_code=$?\n  if [[ -z $timeout_rtrn_code || $timeout_rtrn_code == 0 ]]\n  then\n    echo \"Connected to VPN successfully\" && break\n  else\n    echo \"Connection attempt $n has timed out\"\n    if [[ $n == 3 ]]; \n    then \n      echo \"VPN connection has failed. Error: $timeout_rtrn_code\" && exit $timeout_rtrn_code\n    else\n      echo \"VPN connection has failed but will retry in 5 seconds. Error: $timeout_rtrn_code\"\n      sudo systemctl stop openvpn-client\n      unset timeout_rtrn_code\n    fi\n  fi\n  sleep 45\ndone"
          name: Start OPENVPN client and wait for connection to be made
          
      - run:
          name: Check routes
          command: |
            echo "Public IP is $(wget -qO- http://checkip.amazonaws.com | tee initial.ip)" > currentIP.txt
            ip route show default >> currentIP.txt
            route -n >> currentIP.txt
            ifconfig -a >> currentIP.txt
            
      - store_artifacts:    
          path: /home/circleci/project/currentIP.txt
          destination: currentIP.txt      
          
      - run:
          name: Do stuff in our infrastructure
          command: |
            route -n
            ifconfig -a
            echo "Public IP is $(wget -qO- http://checkip.amazonaws.com | tee initial.ip)"
            echo "Ping-ing VPN server via private network"
            ping -c 5 172.31.40.6
            
      - run:
              name: Disconnect from OpenVPN
              command: sudo killall openvpn || true
              when: always

            
workflows:
  version: 2
  build-and-release:
    jobs:
    - test-vpn
